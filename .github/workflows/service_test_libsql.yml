# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Service Test Libsql

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "core/src/**"
      - "core/tests/**"
      - "!core/src/docs/**"
      - "!core/src/services/**"
      - "core/src/services/libsql/**"
      - ".github/workflows/service_test_libsql.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  libsql:
    runs-on: ubuntu-latest

    services:
      libsql:
        image: ghcr.io/libsql/sqld:latest
        ports:
          - "8080:8080"
        env:
          SQLD_MAX_RESPONSE_SIZE: 20971520
          SQLD_MAX_TOTAL_RESPONSE_SIZE: 209715200

    steps:
      - uses: actions/checkout@v4
      - name: Create table
        shell: bash
        working-directory: core
        run: |
            curl --location '127.0.0.1:8080/' \
            --header 'Content-Type: application/json' \
            --data '{
                "statements": [
                    {"q": "CREATE TABLE IF NOT EXISTS `data` (`key` TEXT PRIMARY KEY NOT NULL CHECK(length(key) <= 255),`data` BLOB);"}
                ]
            }'

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true

      - name: Test
        shell: bash
        working-directory: core
        # The sqld service allows a maximum of 128 connections. If all connections are in use, new connections will be queued and wait for up to 1 second before becoming available. 
        # And that these connection settings are hard-coded.
        # See: https://github.com/libsql/sqld/pull/383
        run: NEXTEST_TEST_THREADS=1 cargo nextest run libsql --features services-libsql
        env:
          OPENDAL_LIBSQL_TEST: on
          OPENDAL_LIBSQL_CONNECTION_STRING: http://127.0.0.1:8080
          OPENDAL_LIBSQL_TABLE: data
          OPENDAL_LIBSQL_KEY_FIELD: key
          OPENDAL_LIBSQL_VALUE_FIELD: data
