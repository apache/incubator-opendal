// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// This file is generated by codegen/bin/genconfig.py.
// DO NOT MODIFY MANUALLY

{% for config in configs %}
{{ config.rust_cfg }}
pub use {{ config.name }}::{{ config.rust_struct_name() }};
{% endfor %}

{% for config in configs %}
{{ config.rust_cfg }}
pub mod {{ config.name }} {
    use crate::raw::*;
    use serde::Deserialize;
    use std::fmt::Debug;
    use std::fmt::Formatter;

    /// Config for {{ config.desc }}
    #[derive(Default, Deserialize)]
    #[serde(default)]
    #[non_exhaustive]
    pub struct {{ config.rust_struct_name() }} {
        {%- for field in config.fields %}
        {{ field.rust_comment() -}}
        pub {{ field.name }}: {{ field.rust_type() }},
        {%- endfor %}
    }

    impl Debug for {{ config.rust_struct_name() }} {
        fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
            let mut d = f.debug_struct("{{ config.rust_struct_name() }}");

            d
            {% for field in config.fields %}
            .field("{{ field.name }}", {{ field.rust_debug_field() }})
            {% endfor %}
            ;

            d.finish_non_exhaustive()
        }
    }
}
{% endfor %}
