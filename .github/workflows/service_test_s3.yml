# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Service Test S3

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "core/src/**"
      - "core/tests/**"
      - "!core/src/docs/**"
      - "!core/src/services/**"
      - "core/src/services/s3/**"
      - "bindings/java/**"
      - ".github/workflows/service_test_s3.yml"
      - "fixtures/s3/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  aws_s3_with_assume_role:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || !github.event.pull_request.head.repo.fork
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - uses: actions/github-script@v6
        id: id-token
        with:
          script: return await core.getIDToken("sts.amazonaws.com")
          result-encoding: string
      - name: Write ID token to file
        run: echo "${{ steps.id-token.outputs.result }}" > core/tests/data/web_identity_token
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run behavior
        env:
          AWS_WEB_IDENTITY_TOKEN_FILE: tests/data/web_identity_token
          AWS_ROLE_ARN: arn:aws:iam::952853449216:role/opendal-testing-assume
          OPENDAL_TEST: s3
          OPENDAL_S3_ROOT: CI/
          OPENDAL_S3_BUCKET: opendal-testing
          OPENDAL_S3_ROLE_ARN: arn:aws:iam::952853449216:role/opendal-testing
          OPENDAL_S3_REGION: ap-northeast-1

  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup MinIO Server
        shell: bash
        working-directory: fixtures/s3
        run: docker-compose -f docker-compose-minio.yml up -d

      - name: Setup test bucket
        env:
          AWS_ACCESS_KEY_ID: "minioadmin"
          AWS_SECRET_ACCESS_KEY: "minioadmin"
          AWS_EC2_METADATA_DISABLED: "true"
        run: aws --endpoint-url http://127.0.0.1:9000/ s3 mb s3://test

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup

      - name: Build with maturin
        working-directory: "bindings/python"
        run: |
          python -m pip install -e .[test]

      - name: Test
        shell: bash
        working-directory: bindings/python
        run: pytest -vk TestS3
        env:
          OPENDAL_S3_TEST: on
          OPENDAL_S3_BUCKET: test
          OPENDAL_S3_ENDPOINT: "http://127.0.0.1:9000"
          OPENDAL_S3_ACCESS_KEY_ID: minioadmin
          OPENDAL_S3_SECRET_ACCESS_KEY: minioadmin
          OPENDAL_S3_REGION: us-east-1
