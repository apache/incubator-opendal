# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "core/**"
      - "bindings/**"
      - ".github/workflows/docs.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build-rust-doc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-rocksdb: true
          need-protoc: true

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build OpenDAL doc
        run: cargo doc --lib --no-deps --all-features -p opendal
        env:
          LD_LIBRARY_PATH: ${{ env.JAVA_HOME }}/lib/server:${{ env.LD_LIBRARY_PATH }}

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: rust-docs
          path: ./target/doc

  build-java-doc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build and test
        working-directory: bindings/java
        run: mvn javadoc:javadoc

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: java-docs
          path: ./bindings/java/target/site/apidocs

  build-nodejs-doc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: yarn
          cache-dependency-path: "bindings/nodejs/yarn.lock"

      - name: Corepack
        working-directory: bindings/nodejs
        run: corepack enable
      - name: Install dependencies
        working-directory: bindings/nodejs
        run: yarn install --immutable

      - name: Build bindings/nodejs Docs
        working-directory: bindings/nodejs
        run: yarn docs

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: nodejs-docs
          path: ./bindings/nodejs/docs

  build-python-doc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup

      - name: Build and install dependencies
        working-directory: bindings/python
        run: |
          python -m pip install -e .[docs]

      - name: Build Docs
        working-directory: bindings/python
        run: pdoc --output-dir ./docs opendal

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: python-docs
          path: ./bindings/python/docs

  build-c-doc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup

      - name: Setup doxygen
        run: sudo apt-get install doxygen

      - name: Build Docs
        working-directory: bindings/c
        run: make doc

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: C-docs
          path: ./bindings/c/docs/doxygen/html

  build-lua-doc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup lua-ldoc
        run: sudo apt-get install lua-ldoc

      - name: Build Docs
        working-directory: "bindings/lua"
        run: ldoc ./src

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: lua-docs
          path: ./bindings/lua/doc/

  build-haskell-doc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Haskell toolchain (ghc-9.2.8)
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
          ghcup install ghc 9.2.8 --set
          ghcup install cabal --set
          cabal update

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup

      - name: Restore haskell cache
        uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-haskell-${{ hashFiles('**/*.cabal', '**/Setup.hs') }}
          path: |
            ~/.cabal/store
            bindings/haskell/dist-newstyle
          restore-keys: ${{ runner.os }}-haskell-

      - name: Build Docs
        working-directory: "bindings/haskell"
        run: |
          cabal haddock --haddock-html --haddock-quickjump --haddock-hyperlink-source
          find dist-newstyle -path '**/build/**/doc' -exec cp -r {}/html/opendal-hs/ doc \;
        
      - name: Save haskell cache
        uses: actions/cache/save@v3
        with:
          key: ${{ runner.os }}-haskell-${{ hashFiles('**/*.cabal', '**/Setup.hs') }}
          path: |
            ~/.cabal/store
            bindings/haskell/dist-newstyle

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: haskell-docs
          path: ./bindings/haskell/doc/

  build-cpp-doc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup

      - name: Install dependencies
        run: | 
          sudo apt-get install doxygen graphviz ninja-build

      - name: Build Cpp docs
        working-directory: "bindings/cpp"
        run: |
          mkdir build
          cd build
          cmake -GNinja -DOPENDAL_DOCS_ONLY=ON ..
          ninja docs

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: cpp-docs
          path: ./bindings/cpp/build/docs_doxygen/html

  build-website:
    runs-on: ubuntu-latest
    needs:
      - build-rust-doc
      - build-java-doc
      - build-nodejs-doc
      - build-python-doc
      - build-c-doc
      - build-lua-doc
      - build-haskell-doc
      - build-cpp-doc

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: yarn
          cache-dependency-path: "website/yarn.lock"

      - name: Corepack
        working-directory: website
        run: corepack enable

      - name: Download rust docs
        uses: actions/download-artifact@v3
        with:
          name: rust-docs
          path: ./website/static/docs/rust

      - name: Download nodejs docs
        uses: actions/download-artifact@v3
        with:
          name: nodejs-docs
          path: ./website/static/docs/nodejs

      - name: Download python docs
        uses: actions/download-artifact@v3
        with:
          name: python-docs
          path: ./website/static/docs/python

      - name: Download java docs
        uses: actions/download-artifact@v3
        with:
          name: java-docs
          path: ./website/static/docs/java

      - name: Download C docs
        uses: actions/download-artifact@v3
        with:
          name: C-docs
          path: ./website/static/docs/c

      - name: Download lua docs
        uses: actions/download-artifact@v3
        with:
          name: lua-docs
          path: ./website/static/docs/lua

      - name: Download haskell docs
        uses: actions/download-artifact@v3
        with:
          name: haskell-docs
          path: ./website/static/docs/haskell

      - name: Download cpp docs
        uses: actions/download-artifact@v3
        with:
          name: cpp-docs
          path: ./website/static/docs/cpp

      - name: Install Dependencies
        working-directory: website
        run: yarn install --immutable

      - name: Build
        working-directory: website
        run: yarn build

      - name: Copy asf file
        run:  cp .asf.yaml ./website/build/.asf.yaml

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3.9.2
        if: github.event_name == 'push' && github.ref_name == 'main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: website/build
          publish_branch: gh-pages
