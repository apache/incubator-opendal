name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Checkout python env
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Checkout java env
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "11"
      - name: Setup-hdfs env
        uses: beyondstorage/setup-hdfs@master
        with:
          hdfs-version: "3.3.2"

      - uses: Swatinem/rust-cache@v2

      - uses: ./.github/actions/check
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  msrv_check:
    runs-on: ubuntu-latest
    env:
      # OpenDAL's MSRV is 1.60.
      OPENDAL_MSRV: "1.60"
    steps:
      - uses: actions/checkout@v3
      - name: Checkout python env
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Checkout java env
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "11"
      - name: Setup-hdfs env
        uses: beyondstorage/setup-hdfs@master
        with:
          hdfs-version: "3.3.2"
      - name: Setup msrv of rust
        run: |
          rustup toolchain install ${OPENDAL_MSRV}
          rustup component add clippy --toolchain ${OPENDAL_MSRV}

      - uses: Swatinem/rust-cache@v2
      - name: Check
        run: cargo +${OPENDAL_MSRV} clippy --no-deps --all-targets --all-features -- -D warnings

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build

  build_all_features:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout python env
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Checkout java env
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "11"
      - name: Setup-hdfs env
        uses: beyondstorage/setup-hdfs@master
        with:
          hdfs-version: "3.3.2"

      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --all-features --release

  unit:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout python env
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Checkout java env
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "11"
      - name: Setup-hdfs env
        uses: beyondstorage/setup-hdfs@master
        with:
          hdfs-version: "3.3.2"

      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Test
        run: cargo nextest run --no-fail-fast --features layers-all && cargo test --doc
        env:
          RUST_LOG: DEBUG
          RUST_BACKTRACE: full
          LD_LIBRARY_PATH: ${{ env.JAVA_HOME }}/lib/server:${{ env.LD_LIBRARY_PATH }}

  build_oli:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        working-directory: ./binaries/oli
        run: cargo build

  unit_oli:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Test
        working-directory: ./binaries/oli
        run: cargo nextest run && cargo test --doc

  build_oay:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        working-directory: ./binaries/oay
        run: cargo build

  unit_oay:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Test
        working-directory: ./binaries/oay
        run: cargo nextest run && cargo test --doc

  build_object_store:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        working-directory: ./bindings/object_store
        run: cargo build

  unit_object_store:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Test
        working-directory: ./bindings/object_store
        run: cargo nextest run && cargo test --doc
