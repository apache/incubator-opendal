# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Service Test Redis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "core/src/**"
      - "core/tests/**"
      - "!core/src/docs/**"
      - "!core/src/services/**"
      - "core/src/services/redis/**"
      - ".github/workflows/service_test_redis.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  redis:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run redis --features services-redis
        env:
          OPENDAL_REDIS_TEST: on
          OPENDAL_REDIS_ENDPOINT: tcp://127.0.0.1:6379
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0

  redis-tls:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Copy Redis Certificate Files
        shell: bash
        working-directory: core
        run: |
          mkdir -p /tmp/redis
          cp -r `pwd`/src/services/redis/fixtures/* /tmp/redis

      - name: Configure Redis with TLS
        run: |

          # allow the redis docker to read these files
          chmod 777 /tmp/redis/redis.crt /tmp/redis/redis.key

          # Launch redis

          docker run -d \
            --rm \
            --name redis \
            --network host \
            --mount type=bind,source=/tmp/redis,target=/etc/redis/ssl \
            redis \
              --tls-port 6380 \
              --tls-cert-file /etc/redis/ssl/redis.crt \
              --tls-key-file /etc/redis/ssl/redis.key \
              --tls-auth-clients no

          # Install the CA in the system

          sudo cp /tmp/redis/ca.crt /usr/local/share/ca-certificates
          sudo update-ca-certificates

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run redis --features services-redis-rustls
        env:
          OPENDAL_REDIS_TEST: on
          OPENDAL_REDIS_ENDPOINT: rediss://localhost:6380
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0

  redis-cluster:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Configure Redis Cluster
        run: |

            # Launch redis cluster
            for no in `seq 0 5`; do \

                docker run -d \
                    --rm \
                    --name redis-${no} \
                    --network host \
                    redis:latest \
                    --port 638${no} \
                    --cluster-enabled yes \
                    --cluster-config-file nodes.conf \
                    --cluster-node-timeout 15000 \
                    --cluster-announce-ip 127.0.0.1 \
                    --cluster-announce-port 638${no} \
                    --cluster-announce-bus-port 1638${no}
            done

            docker run --rm \
                    --name redis-cluster-create \
                    --network host \
                    redis:latest \
                    sh -c "echo yes | redis-cli --cluster create 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383 127.0.0.1:6384 127.0.0.1:6385 --cluster-replicas 1"

      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run redis --features services-redis
        env:
          OPENDAL_REDIS_TEST: on
          OPENDAL_REDIS_CLUSTER_ENDPOINTS: redis://127.0.0.1:6380/,redis://127.0.0.1:6381/,redis://127.0.0.1:6382/,redis://127.0.0.1:6383/,redis://127.0.0.1:6384/,redis://127.0.0.1:6385/
          OPENDAL_REDIS_ROOT: /test/opendal
          OPENDAL_REDIS_DB: 0

  redis-cluster-tls:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Copy Redis Certificate Files
        shell: bash
        working-directory: core
        run: |
            mkdir -p /tmp/redis
            cp -r `pwd`/src/services/redis/fixtures/* /tmp/redis

      - name: Configure Redis Cluster with TLS
        run: |

            # allow the redis docker to read these files
            chmod 777 /tmp/redis/redis.crt /tmp/redis/redis.key

            # Install the CA in the system
            sudo cp /tmp/redis/ca.crt /usr/local/share/ca-certificates
            sudo update-ca-certificates
            
            # Launch redis cluster
            for no in `seq 0 5`; do \

                docker run -d \
                    --rm \
                    --name redis-${no} \
                    --network host \
                    --mount type=bind,source=/tmp/redis,target=/etc/redis/ssl \
                    redis:latest \
                    --requirepass opendal \
                    --masterauth opendal \
                    --port 0 \
                    --cluster-enabled yes \
                    --cluster-config-file nodes.conf \
                    --cluster-node-timeout 15000 \
                    --cluster-announce-ip 127.0.0.1 \
                    --cluster-announce-port 638${no} \
                    --cluster-announce-bus-port 1638${no} \
                    --tls-protocols 'TLSv1.2' \
                    --tls-replication yes \
                    --tls-cluster yes \
                    --tls-port 638${no} \
                    --tls-cert-file /etc/redis/ssl/redis.crt \
                    --tls-key-file /etc/redis/ssl/redis.key \
                    --tls-ca-cert-file /etc/redis/ssl/ca.crt \
                    --tls-auth-clients no
            done
    
            docker run --rm \
                --name redis-cluster-create \
                --network host \
                --mount type=bind,source=/tmp/redis,target=/etc/redis/ssl \
                redis:latest \
                sh -c "echo yes | redis-cli --cluster create 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383 127.0.0.1:6384 127.0.0.1:6385 --cluster-replicas 1 --tls -a opendal --cacert /etc/redis/ssl/ca.crt"

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true

      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run redis --features services-redis-rustls
        env:
          OPENDAL_REDIS_TEST: on
          OPENDAL_REDIS_CLUSTER_ENDPOINTS: rediss://127.0.0.1:6380/,rediss://127.0.0.1:6381/,rediss://127.0.0.1:6382/,rediss://127.0.0.1:6383/,rediss://127.0.0.1:6384/,rediss://127.0.0.1:6385/
          OPENDAL_REDIS_PASSWORD: opendal
          OPENDAL_REDIS_ROOT: /test/opendal
          OPENDAL_REDIS_DB: 0

  dragonfly:
    runs-on: ubuntu-latest
    services:
      redis:
        image: docker.dragonflydb.io/dragonflydb/dragonfly
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run redis --features services-redis
        env:
          OPENDAL_REDIS_TEST: on
          OPENDAL_REDIS_ENDPOINT: tcp://127.0.0.1:6379
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0

  kvrocks:
    runs-on: ubuntu-latest
    services:
      redis:
        image: apache/kvrocks
        ports:
          - 6379:6666
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run redis --features services-redis
        env:
          OPENDAL_REDIS_TEST: on
          OPENDAL_REDIS_ENDPOINT: tcp://127.0.0.1:6379
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0
