# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Bindings Java CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
    paths:
      - "core/**"
      - "bindings/java/**"
      - ".github/workflows/bindings_java.yml"
  schedule:
    - cron: '30 1 * * 1'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Build and test
        working-directory: bindings/java
        run: mvn spotless:check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Build and test
        working-directory: bindings/java
        run: mvn clean verify

  stage-releases:
    runs-on: ${{ matrix.os }}
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            classifier: linux-x86_64
          # FIXME: Windows is not supported due to 1password action limitation.
          # - os: windows-latest
            # classifier: windows-x86_64
          - os: macos-latest
            classifier: osx-x86_64
          - os: macos-latest
            classifier: osx-aarch_64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          MAVEN_GPG_PRIVATE_KEY: op://services/maven/gpg_private_key
          MAVEN_GPG_PASSPHRASE: op://services/maven/gpg_passphrase

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          server-id: apache.releases.https
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ env.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Local staging
        working-directory: bindings/java
        run: mvn -Papache-release package verify org.sonatype.plugins:nexus-staging-maven-plugin:deploy -Djni.classifier=${{ matrix.classifier }} -DskipTests=true -DaltStagingDirectory=local-staging -DskipRemoteStaging=true -DserverId=apache.releases.https -DnexusUrl=https://repository.apache.org
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USER }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.NEXUS_PW }}
          MAVEN_GPG_PASSPHRASE: ${{ env.MAVEN_GPG_PASSPHRASE }}

      - name: Upload local staging directory
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.classifier }}-local-staging
          path: bindings/java/local-staging
          if-no-files-found: error

  deploy-releases:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [stage-releases]
    steps:
      - uses: actions/checkout@v3
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          MAVEN_GPG_PRIVATE_KEY: op://services/maven/gpg_private_key
          MAVEN_GPG_PASSPHRASE: op://services/maven/gpg_passphrase

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          server-id: apache.releases.https
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ env.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Prepare enviroment variables
        run: echo "LOCAL_STAGING_DIR=$HOME/local-staging" >> $GITHUB_ENV

      # - name: Download windows staging directory
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: windows-x86_64-local-staging
      #     path: ~/windows-x86_64-local-staging

      - name: Download linux staging directory
        uses: actions/download-artifact@v3
        with:
          name: linux-x86_64-local-staging
          path: ~/linux-x86_64-local-staging
      - name: Download darwin staging directory
        uses: actions/download-artifact@v3
        with:
          name: osx-x86_64-local-staging
          path: ~/osx-x86_64-local-staging
      - name: Download darwin (aarch64) staging directory
        uses: actions/download-artifact@v3
        with:
          name: osx-aarch_64-local-staging
          path: ~/osx-aarch_64-local-staging

      - name: Merge staging repositories
        run: bash ./scripts/merge_local_staging.sh $LOCAL_STAGING_DIR/staging ~/linux-x86_64-local-staging/staging ~/osx-x86_64-local-staging/staging ~/osx-aarch_64-local-staging/staging # ~/windows-x86_64-local-staging/staging

      - name: Deploy local staged artifacts
        if: false # ASF org-wise token are not allowed to directly push to release repository
        working-directory: bindings/java
        run: mvn org.sonatype.plugins:nexus-staging-maven-plugin:deploy-staged -DaltStagingDirectory=$LOCAL_STAGING_DIR -DskipStagingRepositoryClose=true -DserverId=apache.releases.https -DnexusUrl=https://repository.apache.org
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USER }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.NEXUS_PW }}
          MAVEN_GPG_PASSPHRASE: ${{ env.MAVEN_GPG_PASSPHRASE }}
