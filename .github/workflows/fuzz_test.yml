# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


name: Fuzz Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "core/src/**"
      - "!core/src/docs/**"
      - "!core/src/services/**"
      - "core/src/services/fs/**"
      - "core/src/services/memory/**"
      - "core/src/services/s3/**"
      - ".github/workflows/fuzz_test.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  fuzz-test:
    runs-on: ubuntu-latest
    services:
      minio:
        image: wktk/minio-server
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: "minioadmin"
          MINIO_SECRET_KEY: "minioadmin"
    strategy:
      fail-fast: true
      matrix:
        fuzz-targets: [fuzz_reader, fuzz_range_reader, fuzz_writer]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Test Bucket
        env:
          AWS_ACCESS_KEY_ID: "minioadmin"
          AWS_SECRET_ACCESS_KEY: "minioadmin"
          AWS_EC2_METADATA_DISABLED: "true"
        run: aws --endpoint-url http://127.0.0.1:9000/ s3 mb s3://test
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
      - name: Install cargo fuzz
        shell: bash
        run: rustup install nightly && cargo +nightly install cargo-fuzz
      - name: Build Fuzz Targets
        shell: bash
        working-directory: core/fuzz
        run: cargo +nightly fuzz build -D
      - name: Test
        shell: bash
        working-directory: core/fuzz
        run: cargo +nightly fuzz run -D ${{ matrix.fuzz-targets }} -- -max_total_time=200
        env:
          OPENDAL_MEMORY_TEST: on
          OPENDAL_FS_TEST: on
          OPENDAL_FS_ROOT: ${{ runner.temp }}/
          OPENDAL_S3_TEST: on
          OPENDAL_S3_BUCKET: test
          OPENDAL_S3_ENDPOINT: "http://127.0.0.1:9000"
          OPENDAL_S3_ACCESS_KEY_ID: minioadmin
          OPENDAL_S3_SECRET_ACCESS_KEY: minioadmin


