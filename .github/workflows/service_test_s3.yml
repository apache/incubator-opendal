# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Service Test S3

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "core/src/**"
      - "core/tests/**"
      - "!core/src/docs/**"
      - "!core/src/services/**"
      - "core/src/services/s3/**"
      - ".github/workflows/service_test_s3.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  aws_s3:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'apache' }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
      - name: Test
        shell: bash
        working-directory: core
        run: cargo test s3 -- --show-output
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          OPENDAL_S3_TEST: ${{ secrets.OPENDAL_S3_TEST }}
          OPENDAL_S3_ROOT: ${{ secrets.OPENDAL_S3_ROOT }}
          OPENDAL_S3_BUCKET: ${{ secrets.OPENDAL_S3_BUCKET }}
          OPENDAL_S3_ENDPOINT: ${{ secrets.OPENDAL_S3_ENDPOINT }}
          OPENDAL_S3_ACCESS_KEY_ID: ${{ secrets.OPENDAL_S3_ACCESS_KEY_ID }}
          OPENDAL_S3_SECRET_ACCESS_KEY: ${{ secrets.OPENDAL_S3_SECRET_ACCESS_KEY }}
          OPENDAL_S3_REGION: ap-northeast-1

  aws_s3_with_virtual_host:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'apache' }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
      - name: Test
        shell: bash
        working-directory: core
        run: cargo test s3 -- --show-output
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          OPENDAL_S3_TEST: ${{ secrets.OPENDAL_S3_TEST }}
          OPENDAL_S3_ROOT: ${{ secrets.OPENDAL_S3_ROOT }}
          OPENDAL_S3_BUCKET: ${{ secrets.OPENDAL_S3_BUCKET }}
          OPENDAL_S3_ENDPOINT: ${{ secrets.OPENDAL_S3_ENDPOINT }}
          OPENDAL_S3_ACCESS_KEY_ID: ${{ secrets.OPENDAL_S3_ACCESS_KEY_ID }}
          OPENDAL_S3_SECRET_ACCESS_KEY: ${{ secrets.OPENDAL_S3_SECRET_ACCESS_KEY }}
          OPENDAL_S3_ENABLE_VIRTUAL_HOST_STYLE: on
          OPENDAL_S3_REGION: ap-northeast-1

  aws_s3_with_sse_c:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'apache' }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
      - name: Test
        shell: bash
        working-directory: core
        run: cargo test s3 -- --show-output
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          OPENDAL_S3_TEST: ${{ secrets.OPENDAL_S3_TEST }}
          OPENDAL_S3_ROOT: ${{ secrets.OPENDAL_S3_ROOT }}
          OPENDAL_S3_BUCKET: ${{ secrets.OPENDAL_S3_BUCKET }}
          OPENDAL_S3_ENDPOINT: ${{ secrets.OPENDAL_S3_ENDPOINT }}
          OPENDAL_S3_ACCESS_KEY_ID: ${{ secrets.OPENDAL_S3_ACCESS_KEY_ID }}
          OPENDAL_S3_SECRET_ACCESS_KEY: ${{ secrets.OPENDAL_S3_SECRET_ACCESS_KEY }}
          OPENDAL_S3_SERVER_SIDE_ENCRYPTION_CUSTOMER_ALGORITHM: AES256
          OPENDAL_S3_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY: MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA=
          OPENDAL_S3_SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_MD5: zZ5FnqcIqUjVwvWmyog4zw==
          OPENDAL_S3_REGION: ap-northeast-1

  minio_s3:
    runs-on: ubuntu-latest

    # Setup minio server
    services:
      minio:
        image: wktk/minio-server
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: "minioadmin"
          MINIO_SECRET_KEY: "minioadmin"

    steps:
      - uses: actions/checkout@v3
      - name: Setup test bucket
        env:
          AWS_ACCESS_KEY_ID: "minioadmin"
          AWS_SECRET_ACCESS_KEY: "minioadmin"
          AWS_EC2_METADATA_DISABLED: "true"
        run: aws --endpoint-url http://127.0.0.1:9000/ s3 mb s3://test
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
      - name: Test
        shell: bash
        working-directory: core
        run: cargo test s3 -- --show-output
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          OPENDAL_S3_TEST: on
          OPENDAL_S3_BUCKET: test
          OPENDAL_S3_ENDPOINT: "http://127.0.0.1:9000"
          OPENDAL_S3_ACCESS_KEY_ID: minioadmin
          OPENDAL_S3_SECRET_ACCESS_KEY: minioadmin

  anonymous_minio_s3:
    runs-on: ubuntu-latest

    # Setup minio server
    services:
      minio:
        image: wktk/minio-server
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: "minioadmin"
          MINIO_SECRET_KEY: "minioadmin"

    steps:
      - uses: actions/checkout@v3
      - name: Setup test bucket
        run: |
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          ./mc alias set local http://127.0.0.1:9000/ minioadmin minioadmin
          ./mc mb local/test
          ./mc anonymous set public local/test
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
      - name: Test
        shell: bash
        working-directory: core
        run: cargo test s3 -- --show-output
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          OPENDAL_S3_TEST: on
          OPENDAL_S3_BUCKET: test
          OPENDAL_S3_ENDPOINT: "http://127.0.0.1:9000"
