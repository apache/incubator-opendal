# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Setup Rust Builder
description: 'Prepare Rust Build Environment'
inputs:
  need-rocksdb:
    description: "This setup needs rocksdb or not"
  need-nextest:
    description: "This setup needs nextest or not"

runs:
  using: "composite"
  steps:
    - name: Setup rust related environment variables
      shell: bash
      run: |
        # Disable full debug symbol generation to speed up CI build and keep memory down
        # "1" means line tables only, which is useful for panic tracebacks.
        echo "RUSTFLAGS=-C debuginfo=1" >> $GITHUB_ENV
        # Enable backtraces
        echo "RUST_BACKTRACE=1" >> $GITHUB_ENV
        # Enable logging
        echo "RUST_LOG=opendal=debug" >> $GITHUB_ENV
        # Enable sparse index
        echo "CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse" >> $GITHUB_ENV

    - name: Cache nextest on linux
      id: cache-nextest
      uses: actions/cache@v3
      if: inputs.need-nextest == 'true' && runner.os == 'Linux'
      with:
        path: ~/.cargo/bin/cargo-nextest
        # TODO: remove the runner.os while bumping version
        key: r0-${{runner.os}}-nextest-0.9.53

    - name: Build nextest if not cached
      if: steps.cache-nextest.outputs.cache-hit != 'true' && inputs.need-nextest == 'true'
      shell: bash
      run: cargo install cargo-nextest@0.9.53 --locked

    - name: Setup rust on linux
      if: runner.os == 'Linux' && inputs.need-rocksdb == 'true'
      shell: bash
      run: |
        # Set rocksdb lib path
        echo "ROCKSDB_LIB_DIR=/tmp/rocksdb/lib" >> $GITHUB_ENV
        echo "ROCKSDB_STATIC=true" >> $GITHUB_ENV

    - name: Cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      if: runner.os == 'Linux' && inputs.need-rocksdb == 'true'
      with:
        path: /tmp/rocksdb
        key: r0-rocksdb-8.1.1

    - name: Build rocksdb if not cached
      if: steps.cache-rocksdb.outputs.cache-hit != 'true' && runner.os == 'Linux' && inputs.need-rocksdb == 'true'
      shell: bash
      run: |
        set -e

        sudo apt-get install libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev

        cd /tmp
        curl https://github.com/facebook/rocksdb/archive/refs/tags/v8.1.1.tar.gz -L -o rocksdb.tar.gz
        tar -xzf rocksdb.tar.gz
        cd rocksdb-8.1.1

        mkdir /tmp/rocksdb
        cmake -DCMAKE_INSTALL_PREFIX=/tmp/rocksdb
        make -j$(nproc)
        make install

        cd ..
        rm -rf /tmp/rocksdb-8.1.1
