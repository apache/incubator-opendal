"""
this file is generated by opendal/scripts/gen-pyi/main.rs and opendal.__base doesn't exists.

DO NOT EDIT IT Manually
"""

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

from typing import overload, Literal, TypeAlias

# `true`/`false`` in any case, for example, `true`/`True`/`TRUE` `false`/`False`/`FALSE`
_bool: TypeAlias = str

class _Base:
    @overload
    def __init__(
        self,
        scheme: Literal["s3"],
        *,
        root: str = ...,
        bucket: str = ...,
        enable_versioning: str = ...,
        endpoint: str = ...,
        region: str = ...,
        access_key_id: str = ...,
        secret_access_key: str = ...,
        session_token: str = ...,
        role_arn: str = ...,
        external_id: str = ...,
        role_session_name: str = ...,
        disable_config_load: str = ...,
        disable_ec2_metadata: str = ...,
        allow_anonymous: str = ...,
        server_side_encryption: str = ...,
        server_side_encryption_aws_kms_key_id: str = ...,
        server_side_encryption_customer_algorithm: str = ...,
        server_side_encryption_customer_key: str = ...,
        server_side_encryption_customer_key_md5: str = ...,
        default_storage_class: str = ...,
        enable_virtual_host_style: str = ...,
        batch_max_operations: str = ...,
        delete_max_size: str = ...,
        disable_stat_with_override: str = ...,
        checksum_algorithm: str = ...,
        disable_write_with_if_match: str = ...,
    ) -> None: ...
    @overload
    def __init__(self, scheme, **kwargs: str) -> None: ...
