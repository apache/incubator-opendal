# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Edge Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "core/src/**"
      - "!core/src/docs/**"
      - "!core/src/services/**"
      - "core/src/services/fs/**"
      - ".github/workflows/edge_test.yml"

jobs:
  test_file_write_on_full_disk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create disk image
        run: |
          fallocate -l 512K disk.img
          mkfs disk.img

      - name: Mount disk image
        run: |
          mkdir /tmp/test_dir
          sudo mount -o loop disk.img /tmp/test_dir

      - name: Set permissions
        run: sudo chmod a+wr /tmp/test_dir

      - name: Test
        working-directory: core/edge/file_write_on_full_disk
        run: cargo run
        env:
          OPENDAL_FS_ROOT: /tmp/test_dir

  test_wasm_action:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup

      - name: Setup for wasm32
        run: |
          rustup target add wasm32-unknown-unknown

      - name: Install Chrome Environment
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 120.0.6099.129
      - name: Setup for Chrome Driver
        uses: nanasess/setup-chromedriver@v2
      - name: Setup wasm-pack
        run: |
          cargo install wasm-pack

      - name: Setup MinIO Server
        shell: bash
        working-directory: fixtures/s3
        run: docker compose -f docker-compose-minio.yml up -d --wait

      - name: Setup test bucket
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: "minioadmin"
          AWS_SECRET_ACCESS_KEY: "minioadmin"
          AWS_EC2_METADATA_DISABLED: "true"
        run: aws --endpoint-url http://127.0.0.1:9000/ s3 mb s3://test
      
      - name: Test wasm
        working-directory: core/edge/s3_read_on_wasm
        run: |
          wasm-pack build --target web --out-name wasm --out-dir ./static