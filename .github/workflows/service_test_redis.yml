# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Service Test Redis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "core/src/**"
      - "core/tests/**"
      - "!core/src/docs/**"
      - "!core/src/services/**"
      - "core/src/services/redis/**"
      - "bindings/java/**"
      - ".github/workflows/service_test_redis.yml"
      - "fixtures/redis/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  redis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Redis Server
        shell: bash
        working-directory: fixtures/redis
        run: docker-compose -f docker-compose-redis.yml up -d
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run behavior --features services-redis
        env:
          OPENDAL_TEST: redis
          OPENDAL_REDIS_ENDPOINT: tcp://127.0.0.1:6379
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0

  redis-tls:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Redis with TLS
        shell: bash
        working-directory: fixtures/redis
        run: |

          # Install the CA in the system
          sudo cp ssl/ca.crt /usr/local/share/ca-certificates
          sudo update-ca-certificates

          docker-compose -f docker-compose-redis-tls.yml up -d

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run behavior --features services-redis-rustls
        env:
          OPENDAL_TEST: redis
          OPENDAL_REDIS_ENDPOINT: rediss://localhost:6379
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0

  redis-cluster:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Setup Redis Cluster
        shell: bash
        working-directory: fixtures/redis
        run: docker-compose -f docker-compose-redis-cluster.yml up -d
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run behavior --features services-redis
        env:
          OPENDAL_TEST: redis
          OPENDAL_REDIS_CLUSTER_ENDPOINTS: redis://127.0.0.1:6380/,redis://127.0.0.1:6381/,redis://127.0.0.1:6382/,redis://127.0.0.1:6383/,redis://127.0.0.1:6384/,redis://127.0.0.1:6385/
          OPENDAL_REDIS_ROOT: /test/opendal
          OPENDAL_REDIS_DB: 0

  redis-cluster-tls:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Redis Cluster with TLS
        shell: bash
        working-directory: fixtures/redis
        run: |

            # Install the CA in the system

            sudo cp ssl/ca.crt /usr/local/share/ca-certificates
            sudo update-ca-certificates

            docker-compose -f docker-compose-redis-cluster-tls.yml up -d

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true

      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run behavior --features services-redis-rustls
        env:
          OPENDAL_TEST: redis
          OPENDAL_REDIS_CLUSTER_ENDPOINTS: rediss://127.0.0.1:6380/,rediss://127.0.0.1:6381/,rediss://127.0.0.1:6382/,rediss://127.0.0.1:6383/,rediss://127.0.0.1:6384/,rediss://127.0.0.1:6385/
          OPENDAL_REDIS_PASSWORD: opendal
          OPENDAL_REDIS_ROOT: /test/opendal
          OPENDAL_REDIS_DB: 0

  dragonfly:
    runs-on: ubuntu-latest
    services:
      redis:
        image: docker.dragonflydb.io/dragonflydb/dragonfly
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run behavior --features services-redis
        env:
          OPENDAL_TEST: redis
          OPENDAL_REDIS_ENDPOINT: tcp://127.0.0.1:6379
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0

  kvrocks:
    runs-on: ubuntu-latest
    services:
      redis:
        image: apache/kvrocks:2.5.1
        ports:
          - 6379:6666
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          need-nextest: true
      - name: Test
        shell: bash
        working-directory: core
        run: cargo nextest run behavior --features services-redis
        env:
          OPENDAL_TEST: redis
          OPENDAL_REDIS_ENDPOINT: tcp://127.0.0.1:6379
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0

  java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup

      - name: Setup Redis Server
        shell: bash
        working-directory: fixtures/redis
        run: docker-compose -f docker-compose-redis.yml up -d

      - name: Test
        shell: bash
        working-directory: bindings/java
        run: ./mvnw test -Dgroups="services_redis" -Dcargo-build.features=services-redis
        env:
          OPENDAL_REDIS_TEST: on
          OPENDAL_REDIS_ENDPOINT: tcp://127.0.0.1:6379
          OPENDAL_REDIS_ROOT: /
          OPENDAL_REDIS_DB: 0
